name: Build and Deploy
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4    # Actualizado de v3 a v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4  # Actualizado de v3 a v4
        with:
          node-version: '20'         # Actualizado a Node.js 20
          
      - name: Install dependencies
        run: npm ci
        
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push:
    name: Build and Push Docker Image
    needs: sonarcloud-analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4    # Actualizado de v3 a v4

      - name: Login to DockerHub
        uses: docker/login-action@v3  # Actualizado a v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  # Actualizado a v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5    # Actualizado a v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/as221s6_t04_kr_wallet:v1
            ${{ secrets.DOCKERHUB_USERNAME }}/krc_wallet:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/krc_wallet:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/krc_wallet:buildcache,mode=max
